{"version":3,"sources":["components/ForbiddenWord.js","components/WordBox.js","components/GamingButton.js","components/Timer.js","components/TeamScore.js","components/GamePopup.js","components/Scoreboard.js","components/Menu.jsx","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["ForbiddenWord","forbiddenWord","className","toUpperCase","WordBox","props","useEffect","displayNewWord","dataFetched","a","tabooWord","forbiddenWords","map","GamingButton","buttonType","onClick","answerProvided","class","renderButton","type","Timer","useState","maxTime","setMaxTime","timerInterval","setTimerInterval","startTimer","currentTime","setInterval","changeActiveTeam","window","clearInterval","countAnswerTime","Math","floor","TeamScore","currentScore","Object","keys","player","GamePopup","counter","setCounter","counterAnimation","setCounterAnimation","prevState","activeTeam","currentCounter","counterInterval","setDisplayPopup","displayPopup","startCountingTime","Scoreboard","scores","winner","pointsTeam1","pointsTeam2","Menu","isMenuOpen","setIsMenuOpen","Game","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","setActiveTeam","remainingRounds","setRemainingRounds","team1Score","team2Score","setCurrentScore","setStartTimer","words","setWords","currentWord","setCurrentWord","setDataFetched","collection","get","then","querySnapshot","forEach","doc","data","console","log","updatePoints","pop","time","score","teamsScoreDifference","displayWinner","App","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbe70804.chunk.js","sourcesContent":["import '../styles/ForbiddenWord.css'\r\n\r\nconst ForbiddenWord = ({ forbiddenWord }) => {\r\n    return (\r\n        <div className=\"forbiddenword\">{forbiddenWord.toUpperCase()}</div>\r\n    );\r\n}\r\n\r\nexport default ForbiddenWord;","import { useEffect } from 'react';\r\n\r\nimport ForbiddenWord from \"./ForbiddenWord\"\r\n\r\nimport '../styles/WordBox.css'\r\n\r\nconst WordBox = (props) => {\r\n    const displayForbiddenWord = () => {\r\n        return props.a.forbiddenWords.map(forbiddenWord => {\r\n            return <ForbiddenWord forbiddenWord={forbiddenWord} />\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        props.displayNewWord()\r\n    }, [props.dataFetched])\r\n    return (\r\n        <div className=\"wordbox\">\r\n            <div className=\"guessWord\">{props.a && props.a.tabooWord.toUpperCase()}</div>\r\n            <div className=\"forbiddenwords\">\r\n                Zakazane słowa:\r\n                {props.a && displayForbiddenWord()}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default WordBox;","import \"../styles/GamingButton.css\"\r\n\r\nconst GamingButton = (props) => {\r\n\r\n    const renderButton = (buttonType) => {\r\n        switch (buttonType) {\r\n            case \"correct\": return <button className={`${buttonType}-btn`} onClick={props.answerProvided}><i class=\"fas fa-check fa-4x\"></i></button>//zrobić to w funkcji generującej przyciski\r\n            case \"incorrect\": return <button className={`${buttonType}-btn`} onClick={props.answerProvided}><i class=\"fas fa-times fa-4x\"></i></button>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {renderButton(props.type)}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GamingButton;","import { useState, useEffect } from 'react';\r\nimport \"../styles/Timer.css\"\r\n\r\nconst Timer = (props) => {\r\n\r\n    const [maxTime, setMaxTime] = useState(props.maxTime);\r\n    const [timerInterval, setTimerInterval] = useState(props.maxTime);\r\n\r\n    useEffect(() => {\r\n        function countAnswerTime() {\r\n            let currentTime = maxTime;\r\n            setTimerInterval(setInterval(() => {\r\n                currentTime > 0 && currentTime--;\r\n                setMaxTime(currentTime);\r\n                props.changeActiveTeam(currentTime);\r\n                currentTime === 0 && window.clearInterval()\r\n                currentTime === 0 && setMaxTime(props.maxTime)\r\n            }, 1000))\r\n        };\r\n\r\n        props.startTimer && countAnswerTime();\r\n        return function cleanup() {\r\n            timerInterval && window.clearInterval(timerInterval);\r\n        };\r\n    }, [props.startTimer]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"timer\">{maxTime > 60 ? `${Math.floor(maxTime / 60)} : ${maxTime % 60}` : maxTime}</div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Timer;","import \"../styles/TeamScore.css\"\r\n\r\nconst TeamScore = ({ currentScore }) => {\r\n    const displayPlayersAndScores = () => {\r\n        return Object.keys(currentScore).map((player) => {\r\n            return (\r\n                <div className={`${player}`} key={player}>{player === \"team1Score\" ? \"Drużyna czerwona\" : \"Drużyna niebieska\"} : {currentScore[player]}</div>\r\n            );\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            {displayPlayersAndScores()}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TeamScore;","\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../styles/GamePopup.css\"\r\n\r\nconst GamePopup = (props) => {\r\n    const [counter, setCounter] = useState(5);\r\n    const [counterAnimation, setCounterAnimation] = useState();\r\n\r\n    useEffect(() => {\r\n        setCounterAnimation(prevState => {\r\n            if (prevState === \"animate\") {\r\n                setCounterAnimation(\"animate2\")\r\n            } else if (prevState === \"animate2\") {\r\n                setCounterAnimation(\"animate\")\r\n            }\r\n        });\r\n    }, [counter])\r\n\r\n    const setVisibilityOfPopup = () => {\r\n        props.setDisplayPopup(!props.displayPopup);\r\n    }\r\n    const countToGameStart = () => {\r\n        setCounterAnimation(\"animate\");\r\n        let currentCounter = counter;\r\n        const counterInterval = setInterval(() => {\r\n            setCounter(--currentCounter);\r\n            currentCounter === 0 && setVisibilityOfPopup();\r\n            currentCounter === 0 && window.clearInterval(counterInterval);\r\n            currentCounter === 0 && props.startCountingTime();\r\n        }, 1000)\r\n    }\r\n    return (\r\n        <div className=\"popup\">\r\n            <div className=\"popup-content\">\r\n                <div className=\"player\">Teraz grają {props.activeTeam}</div>\r\n                <div className=\"counter\"><div className={`countdown ${counterAnimation}`}>{counter}</div></div>\r\n                <button className=\"btn\" onClick={countToGameStart}>Start Game</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GamePopup;","const Scoreboard = (props) => {\r\n    return (\r\n        <div>\r\n            <div>Wygrała drużyna {props.scores.winner}</div>\r\n            <div>Wynik {props.scores.pointsTeam1} : {props.scores.pointsTeam2}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scoreboard;","import { BrowserRouter as Router, Link, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport '../styles/Menu.css'\r\n\r\n\r\n\r\nconst Menu = () => {\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        setIsMenuOpen(!isMenuOpen);\r\n    }\r\n    return (\r\n        <div className={isMenuOpen ? \"menu--opened\" : \"menu\"}>\r\n            <button onClick={toggleMenu} className={`menu-btn ${isMenuOpen ? \"opened\" : \"\"}`}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import { useState, useEffect } from \"react\";\r\n\r\nimport WordBox from \"./WordBox\";\r\nimport GamingButton from \"./GamingButton\";\r\nimport Timer from \"./Timer\";\r\nimport TeamScore from './TeamScore';\r\nimport GamePopup from './GamePopup';\r\nimport Scoreboard from './Scoreboard'\r\nimport Menu from './Menu'\r\nimport \"../styles/Game.css\"\r\n\r\n// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\n// If you are using v7 or any earlier version of the JS SDK, you should import firebase using namespace import\r\n// import * as firebase from \"firebase/app\"\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/firestore\";\r\n\r\n\r\nfunction Game() {\r\n\r\n  // TODO: Replace the following with your app's Firebase project configuration\r\n  // For Firebase JavaScript SDK v7.20.0 and later, `measurementId` is an optional field\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBYseLkrqHpp9QuknKFZ9lspI72IQRjHxU\",\r\n    authDomain: \"taboo-b5dff.firebaseapp.com\",\r\n    projectId: \"taboo-b5dff\",\r\n    storageBucket: \"taboo-b5dff.appspot.com\",\r\n    messagingSenderId: \"952354298632\",\r\n    appId: \"1:952354298632:web:7b94053c1eb2a1595e2abd\"\r\n  };\r\n\r\n  if (firebase.apps.length < 1) {\r\n    firebase.initializeApp(firebaseConfig);\r\n  }\r\n  const db = firebase.firestore();\r\n\r\n  const [activeTeam, setActiveTeam] = useState(\"Team 1\", \"Team2\"); //Obecnie grająca drużyna - domyślnie 1\r\n  const [remainingRounds, setRemainingRounds] = useState(2)\r\n  const [maxTime, setMaxTime] = useState(1000);\r\n  const [currentScore, setCurrentScore] = useState({\r\n    team1Score: 0,\r\n    team2Score: 0,\r\n  }); //obecny wynik kazdej z druzyn\r\n  const [displayPopup, setDisplayPopup] = useState(true);\r\n  const [startTimer, setStartTimer] = useState(false);\r\n  const [words, setWords] = useState([]); //Tablica obiektów ze słowami do odgadniecia i słowami zabronionymi\r\n  const [currentWord, setCurrentWord] = useState();\r\n  const [dataFetched, setDataFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"wordSet\").get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        // doc.data() is never undefined for query doc snapshots\r\n        setWords(prevState => [...prevState, doc.data()]);\r\n        setDataFetched(true);\r\n      });\r\n    });\r\n    console.log(\"DATA FETCHED\")\r\n  }, []);\r\n\r\n  const changeActiveTeam = (time) => {\r\n    if (time === 0) {\r\n      setActiveTeam(activeTeam === 'Team 1' ? 'Team2' : 'Team 1');\r\n      setRemainingRounds(remainingRounds - 0.5);\r\n      setDisplayPopup(true);\r\n      setStartTimer(false);\r\n    }\r\n  }\r\n  const startCountingTime = () => {\r\n    setStartTimer(true);\r\n  };\r\n  const updatePoints = (type) => {\r\n    switch (type) {\r\n      case \"add\":\r\n        activeTeam === \"Team 1\" ? setCurrentScore((prevState) => ({\r\n          ...currentScore,\r\n          team1Score: prevState.team1Score + 1,\r\n        })) : setCurrentScore((prevState) => ({\r\n          ...currentScore,\r\n          team2Score: prevState.team2Score + 1,\r\n        }));\r\n        break;\r\n      case \"remove\":\r\n        activeTeam === \"Team 1\" ? setCurrentScore((prevState) => ({\r\n          ...currentScore,\r\n          team1Score: prevState.team1Score - 1,\r\n        })) : setCurrentScore((prevState) => ({\r\n          ...currentScore,\r\n          team2Score: prevState.team2Score - 1,\r\n        }));\r\n    }\r\n  }\r\n  const displayNewWord = () => {\r\n    setCurrentWord(words.pop());\r\n  }\r\n  const correctAnswerProvided = () => {\r\n    updatePoints(\"add\");\r\n    displayNewWord();\r\n  }\r\n  const inCorrectAnswerProvided = () => {\r\n    updatePoints(\"remove\");\r\n    displayNewWord();\r\n  }\r\n  const displayWinner = (score) => {\r\n    const teamsScoreDifference = score.team1Score - score.team2Score;\r\n    if (teamsScoreDifference > 0) {\r\n      return { winner: \"Team1\", pointsTeam1: score.team1Score, pointsTeam2: score.team2Score }\r\n    } else if (teamsScoreDifference < 0) {\r\n      return { winner: \"Team2\", pointsTeam1: score.team1Score, pointsTeam2: score.team2Score }\r\n    } else if (teamsScoreDifference = 0) {\r\n      return { winner: \"Draw\", pointsTeam1: score.team1Score, pointsTeam2: score.team2Score }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      {remainingRounds ?//This will be replaced by routing\r\n        <div className=\"game\">\r\n          <main className=\"main\">\r\n            {displayPopup && <GamePopup activeTeam={activeTeam === \"Team1\" ? \"Czerwoni\" : \"Niebiescy\"} setDisplayPopup={setDisplayPopup} displayPopup={displayPopup} startCountingTime={startCountingTime} />}\r\n            <div className=\"scoredisplay\">\r\n              <TeamScore currentScore={currentScore} />\r\n              <div className=\"currentPlayer\">Teraz grają {activeTeam === \"Team1\" ? \"CZERWONI\" : \"NIEBIESCY\"}</div>\r\n            </div>\r\n            <Timer maxTime={maxTime} changeActiveTeam={changeActiveTeam} startTimer={startTimer} />\r\n            <WordBox displayNewWord={displayNewWord} a={currentWord} dataFetched={dataFetched} />\r\n            <div className=\"gaming-buttons\">\r\n              <GamingButton type=\"incorrect\" answerProvided={inCorrectAnswerProvided} />\r\n              <GamingButton type=\"correct\" answerProvided={correctAnswerProvided} />\r\n            </div>\r\n          </main>\r\n        </div> :\r\n        <Scoreboard scores={displayWinner(currentScore)} />\r\n      }\r\n      <footer className=\"footer\">\r\n        <i class=\"far fa-copyright\"></i>\r\n        Taboo the game Copyright by Dariusz Majkowski\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","\r\nimport { BrowserRouter as Router, Link, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Game from './components/Game';\r\nimport \"./styles/App.css\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"header\"><h1>Taboo the game</h1></header>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <div className=\"mainmenu\">\r\n              <nav>\r\n                <ul>\r\n                  <li>\r\n                    <Link to=\"/game\">Zacznij gre</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/game\">\r\n            <Game />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}